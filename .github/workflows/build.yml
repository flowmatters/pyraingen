name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # sys:
        #   - { os: windows-2019, shell: "msys2 {0}" }
        #   - { os: ubuntu-20.04, shell: bash }
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9"]
        #, "3.9", "3.10", "3.11", "3.12", "pypy3.9", "pypy3.10"]
        # numpy-version: []
        exclude:
          - os: ubuntu-latest
            python-version: "3.8"
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
      - name: Install mingw-w64 on Windows
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: |
            mingw-w64-x86_64-gcc-fortran
            mingw-w64-x86_64-hdf5
      


      - name: Install GFortran, GCC Linux
        if: contains(matrix.os, 'ubuntu')
        run: |
          # sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc gfortran libhdf5-serial-dev
      
      # - name: Install system dependencies (windows)
      #   if: contains(matrix.os, 'windows-latest')
      #   run: mingw64-pkg install hdf5

      # - name: Build and test wheels
      #   uses: pypa/cibuildwheel@latest
      #   env:
      #     CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}
    
      - name: build
        # if: contains(matrix.os, 'ubuntu')
        run: |
          pip install build
          pip install .
          cd src/pyraingen/fortran_daily
          f2py -m regionalised_dailyT -c regionalised_dailyT.for -I $PWD
          python -m build
          
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
    
      # - name: build windows
      #  if: contains(matrix.os, 'windows')
      #   run: |
      #     python -m venv build
      #     source build/bin/activate
      #     pip install .
      #     cd src/pyraingen/fortrain_daily
      #     python -m numpy.f2py -m regionalised_dailyT -c regionalised_dailyT.for --fcompiler=gnu95 --compiler=mingw32


      # - name: Store artifacts
      #   uses: actions/upload-artifact@latest
      #   with:
      #     path: wheelhouse/*.whl
      