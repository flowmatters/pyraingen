name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # sys:
        #   - { os: windows-2019, shell: "msys2 {0}" }
        #   - { os: ubuntu-20.04, shell: bash }
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "pypy3.9", "pypy3.10"]
        numpy-version: ["1.23", '1.24', '1.25', '1.26', '2.0']
        exclude:
          - os: ubuntu-latest
            python-version: "3.8"
          - os: ubuntu-latest
            numpy-version: "1.24"
            python-version: "3.12"
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
      
      - name: Install mingw-w64 on Windows
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: |
            mingw-w64-x86_64-gcc-fortran
            mingw-w64-x86_64-hdf5
      
      - name: Install GFortran, GCC Linux
        if: contains(matrix.os, 'ubuntu')
        run: |
          # sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc gfortran libhdf5-serial-dev
      
      - name: build
        # if: contains(matrix.os, 'ubuntu')
        run: |
          pip install build numpy==${{matrix.numpy-version}}
          pip install .
          cd src/pyraingen/fortran_daily
          python -m numpy.f2py -m regionalised_dailyT -c regionalised_dailyT.for -I $PWD
          cd ../../..
          python -m build
          
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-x86_64-${{matrix.os}}-python-${{matrix.python-version}}-numpy-${{matrix.numpy-version}}
          path: dist/